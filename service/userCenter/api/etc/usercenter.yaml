# api 配置文档： https://go-zero.dev/cn/docs/configuration/api
# 服务名称
Name: userCenter
# 服务环境，dev-开发环境，test-测试环境，rt-回归测试，pre-预发环境，pro-正式环境，默认 pro
Mode: dev
# http 监听 ip，默认 0.0.0.0
Host: 0.0.0.0
# http 监听端口,必填
Port: 8801
# 是否打印详细 http 请求日志
Verbose: true
# http 同时可接受最大请求数（限流数），默认 10000
MaxConns: 10000
# http 可接受请求的最大 ContentLength，默认 1048576，被设置的值必须在 0 到 8388608 之间
MaxBytes: 1048576
# 超时时长控制，单位：毫秒，默认 3000
Timeout: 3000
# cpu 降载阈值，默认 900，可允许设置范围 0 到 1000
CpuThreshold: 900

Mysql:
  DataSource: root:123456@tcp(127.0.0.1:3306)/go_zero_tutorial?charset=utf8mb4&parseTime=true&loc=Asia%2FShanghai

# redis 配置信息
Redis:
  Host: 127.0.0.1:6379
  Type: node
  Pass:

CacheRedis:
  - Host: 127.0.0.1:6379
    # redis 密码
    Pass:
    # redis 类型，node、cluster
    Type: node
    # 权重
    Weight: 100

Auth:
  AccessSecret: OD37SfaAd29fZJa4h3ga
  # jwt token 有效期，单位：秒（1296000s=15days）
  AccessExpire: 1296000

Log:
  # 服务名称，默认会采用 Name
#  ServiceName:
  # 日志模式，console-输出到 console，file-输出到当前服务器（容器）文件，volume-输出docker挂在文件内
  Mode: file
  # 日志输出格式：json、plain
  Encoding: plain
  # 日志时间格式
  TimeFormat: 2006-01-02 15:04:05
  # 日志存储路径
  Path: runtime/logs
  # 日志级别：debug、info、error、severe
  Level: debug
  # 是否开启 gzip 压缩
  Compress: true
  # 日志保留天数
  KeepDays: 15
  # 表示将保留多少个备份日志文件（只有当 Rotation 为 size 时，才会生效。设置为 0 时，表示永久生效。
  # 如果达到了日志保留天数，就算是设置成 0 那么也会被删除）
  MaxBackups: 7
  # 表示写日志文件占用的大小上限。（只有当 Rotation 为 size 时，才会生效。设置为 0 时，表示无限制，单位为：MB）eg：300MB
  MaxSize: 300
  # 轮转规则：daily、size
  Rotation: daily

# 购物车 grpc 服务相关配置信息
CartRpcConf:
  Etcd:
    Hosts:
      - 127.0.0.1:2379
    Key: cart.rpc
  # 也可以通过 endpoints 直连的方式连接（端口为 rpc 服务端监听的端口）
#  Endpoints:
#    - 127.0.0.1:8901
  # 当依赖的服务未启动时，自身服务不受依赖服务影响（为 false 时，则必须依赖的服务全部启动，自身服务才可以启动）
  NonBlock: true
  # 客户端超时时间，单位：毫秒。默认为：2000ms。设置为 0 时表示永不超时
  Timeout: 2000
